<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.ArticleMapper">
    <resultMap id="BaseResultMap-Part" type="com.pojo.Article">
        <id column="aid" jdbcType="INTEGER" property="aid" />
        <result column="title" jdbcType="VARCHAR" property="title" />
    </resultMap>
  <resultMap id="BaseResultMap" type="com.pojo.Article">
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
  </resultMap>
  <!--(article with cname)-->
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pojo.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="cname" jdbcType="LONGVARCHAR" property="categoryName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aid, title, create_time, view_count, comment_count, uid, cid
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.pojo.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    aid, title,content, create_time, view_count, comment_count, uid, a.cid,c.cname

    from article a
    inner join category c on a.cid=c.cid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>

  </select>
  <select id="selectByExample" parameterType="com.pojo.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    aid, title,content, create_time, view_count, comment_count, uid, a.cid,c.cname
    from article a
    inner join category c on a.cid=c.cid
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.Article">
    <selectKey keyProperty="aid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (title, create_time, view_count, 
      comment_count, uid, cid, 
      content)
    values (#{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{viewCount,jdbcType=INTEGER}, 
      #{commentCount,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Article">
    <selectKey keyProperty="aid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set aid = #{record.aid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set aid = #{record.aid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pojo.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      view_count = #{viewCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      view_count = #{viewCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER}
    where aid = #{aid,jdbcType=INTEGER}
  </update>

  <!--plus-->
  <select id="selectByCategory" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
    select aid,title,create_time,view_count,comment_count,uid,a.cid acid,cc.cname cname,content
    from article a
    inner join category cc on a.cid=cc.cid
        where a.cid=#{cid} or a.cid in (
              select c1.cid from category c1
                  where c1.pcid=#{cid} or c1.pcid in (
                        select c2.cid from category c2
                            where c2.pcid=#{cid}
                  )
        )
        order by a.create_time desc
  </select>

  <select id="selectPreArticleByAid" parameterType="java.lang.Integer" resultMap="BaseResultMap-Part">
    select
    aid, title
    from article
    where  aid &lt; #{id,jdbcType=INTEGER}
    order by aid desc
    limit 1
  </select>
  <select id="selectNextArticleByAid" parameterType="java.lang.Integer" resultMap="BaseResultMap-Part">
    select
    aid, title
    from article
    where aid &gt;#{aid,jdbcType=INTEGER}
    order by aid
    limit 1
  </select>
    <select id="selectHotList" resultMap="BaseResultMap-Part">
        select aid,title
        from article
        order by view_count desc
        limit 8
    </select>
    <select id="selectAllSimply" resultMap="BaseResultMap-Part" >
        select aid,title  from article
    </select>
  <update id="setCidDefault" parameterType="java.lang.Integer">
    update article set cid = 1 where cid=#{cid};
  </update>
</mapper>