<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.pojo.Reply">
    <id column="rid" jdbcType="INTEGER" property="rid" />
    <result column="pcoid" jdbcType="INTEGER" property="pcoid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="to_uid" jdbcType="INTEGER" property="toUid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rid, pcoid, create_time, content, uid, type, to_uid
  </sql>
  <select id="selectByExample" parameterType="com.pojo.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where rid = #{rid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where rid = #{rid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.Reply">
    <selectKey keyProperty="rid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply (pcoid, create_time, content, 
      uid, type, to_uid)
    values (#{pcoid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, #{toUid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Reply">
    <selectKey keyProperty="rid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pcoid != null">
        pcoid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="toUid != null">
        to_uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pcoid != null">
        #{pcoid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="toUid != null">
        #{toUid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.pcoid != null">
        pcoid = #{record.pcoid,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.toUid != null">
        to_uid = #{record.toUid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set rid = #{record.rid,jdbcType=INTEGER},
      pcoid = #{record.pcoid,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      to_uid = #{record.toUid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Reply">
    update reply
    <set>
      <if test="pcoid != null">
        pcoid = #{pcoid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="toUid != null">
        to_uid = #{toUid,jdbcType=INTEGER},
      </if>
    </set>
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Reply">
    update reply
    set pcoid = #{pcoid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR},
      to_uid = #{toUid,jdbcType=INTEGER}
    where rid = #{rid,jdbcType=INTEGER}
  </update>
<!--plus-->
  <select id="selectAllForAdmin" resultMap="selectAllForAdminMap">
    select rid, create_time, content,username
    from reply
    inner join user on user.uid=reply.uid
  </select>
  <resultMap id="selectAllForAdminMap"  type="com.pojo.Reply">
    <id column="rid" property="rid"/>
    <result column="create_time" property="createTime"/>
    <result column="content" property="content"/>
    <result column="username" property="userName"/>
  </resultMap>
</mapper>